<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_push__swap_8h_source" xml:lang="en-US">
<title>push_swap.h</title>
<indexterm><primary>inc/push_swap.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="comment">/*&#32;**************************************************************************&#32;*/</emphasis>
2 <emphasis role="comment">/*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*/</emphasis>
3 <emphasis role="comment">/*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:::&#32;&#32;&#32;&#32;&#32;&#32;::::::::&#32;&#32;&#32;*/</emphasis>
4 <emphasis role="comment">/*&#32;&#32;&#32;push_swap.h&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:+:&#32;&#32;&#32;&#32;&#32;&#32;:+:&#32;&#32;&#32;&#32;:+:&#32;&#32;&#32;*/</emphasis>
5 <emphasis role="comment">/*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+:+&#32;+:+&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+:+&#32;&#32;&#32;&#32;&#32;*/</emphasis>
6 <emphasis role="comment">/*&#32;&#32;&#32;By:&#32;dinepomu&#32;&lt;dinepomu@student.42berlin.de&gt;&#32;&#32;&#32;&#32;+#+&#32;&#32;+:+&#32;&#32;&#32;&#32;&#32;&#32;&#32;+#+&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*/</emphasis>
7 <emphasis role="comment">/*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+#+#+#+#+#+&#32;&#32;&#32;+#+&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*/</emphasis>
8 <emphasis role="comment">/*&#32;&#32;&#32;Created:&#32;2025/01/19&#32;09:57:09&#32;by&#32;dinepomu&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#+#&#32;&#32;&#32;&#32;#+#&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*/</emphasis>
9 <emphasis role="comment">/*&#32;&#32;&#32;Updated:&#32;2025/03/13&#32;16:35:05&#32;by&#32;dinepomu&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;###&#32;&#32;&#32;########.fr&#32;&#32;&#32;&#32;&#32;&#32;&#32;*/</emphasis>
10 <emphasis role="comment">/*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*/</emphasis>
11 <emphasis role="comment">/*&#32;**************************************************************************&#32;*/</emphasis>
12 
13 <emphasis role="comment">/*&#32;**************************************************************************&#32;*/</emphasis>
14 <emphasis role="comment">/*&#32;https://linktr.ee/diegonmarcos&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*/</emphasis>
15 <emphasis role="comment">/*&#32;**************************************************************************&#32;*/</emphasis>
16 
17 <emphasis role="preprocessor">#ifndef&#32;PUSH_SWAP_H</emphasis>
18 <emphasis role="preprocessor">#&#32;define&#32;PUSH_SWAP_H</emphasis>
19 <emphasis role="comment">/*&#32;*****************************************************************&#32;*/</emphasis>
20 <emphasis role="comment">/*&#32;HEADERS&#32;PROGRAM&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*/</emphasis>
21 <emphasis role="comment">/*&#32;*****************************************************************&#32;*/</emphasis>
22 <emphasis role="preprocessor">#&#32;include&#32;&quot;<link linkend="_push__swap__defines_8h">push_swap_defines.h</link>&quot;</emphasis>
23 <emphasis role="preprocessor">#&#32;include&#32;&quot;<link linkend="_push__swap__data_8h">push_swap_data.h</link>&quot;</emphasis>
24 
25 <emphasis role="comment">/*&#32;*****************************************************************&#32;*/</emphasis>
26 <emphasis role="comment">/*&#32;DEPENDENCIES&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*/</emphasis>
27 <emphasis role="comment">/*&#32;*****************************************************************&#32;*/</emphasis>
28 <emphasis role="preprocessor">#&#32;include&#32;&quot;../libs/mylibc/inc/mylibc.h&quot;</emphasis>
29 
30 <emphasis role="comment">//&#32;&#32;▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓&#32;&#32;//</emphasis>
31 <emphasis role="comment">//#####################################################################&#32;*/</emphasis>
32 <emphasis role="comment">//&#32;DATA&#32;STRUCTURE&#32;/&#32;INITIALIZATORS&#32;/&#32;FREE&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*/</emphasis>
33 <emphasis role="comment">//#####################################################################&#32;*/</emphasis>
34 <emphasis role="keywordtype">void</emphasis>&#32;&#32;&#32;&#32;<link linkend="_push__swap_8h_1a1852976558d65cb628d7e7f4e7f7b5ee">data_alloc</link>(<emphasis role="keywordtype">int</emphasis>&#32;argc,&#32;<emphasis role="keywordtype">char</emphasis>&#32;**argv,&#32;\
35 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structs__list__program">t_list_program</link>&#32;*list_program);
36 <emphasis role="keywordtype">void</emphasis>&#32;&#32;&#32;&#32;<link linkend="_push__swap_8h_1a63c99fe8c2bacae4b7ef83c6917266bf">ft_free_push_swap</link>(<link linkend="_structs__list__program">t_list_program</link>&#32;*list_program,&#32;<emphasis role="keywordtype">char</emphasis>&#32;**argv,
37 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_push__swap__data_8h_1a3834963377ca73af56f7e6d6f7b1c7bc">t_list_dls</link>&#32;*stack_a,&#32;<emphasis role="keywordtype">int</emphasis>&#32;argc);
38 <emphasis role="keywordtype">void</emphasis>&#32;&#32;&#32;&#32;<link linkend="_push__swap_8h_1a559e3ef871c76e86b25be9e59343ed1b">ft_free_push_swap_end</link>(<link linkend="_structs__list__program">t_list_program</link>&#32;*list_program);
39 <emphasis role="keywordtype">void</emphasis>&#32;&#32;&#32;&#32;<link linkend="_push__swap_8h_1a8f24a43da60686f9c097bf3e2e383693">ft_free_push_swap_halt</link>(<link linkend="_structs__list__program">t_list_program</link>&#32;*list_programm);
40 
41 <emphasis role="comment">//&#32;&#32;▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓&#32;&#32;//</emphasis>
42 <emphasis role="comment">//#####################################################################&#32;*/</emphasis>
43 <emphasis role="comment">//&#32;SORTING&#32;ALGORITHMS&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*/</emphasis>
44 <emphasis role="comment">//#####################################################################&#32;*/</emphasis>
45 <emphasis role="keywordtype">void</emphasis>&#32;&#32;&#32;&#32;<link linkend="_push__swap_8h_1acc93a52a98064d4a94d9e795db0461e1">sort_stack</link>(<link linkend="_structs__list__program">t_list_program</link>&#32;*list_program);
46 
47 <emphasis role="comment">/*&#32;*****************************************************************&#32;*/</emphasis>
48 <emphasis role="comment">/*&#32;SELECTION&#32;SORT&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*/</emphasis>
49 <emphasis role="comment">/*&#32;*****************************************************************&#32;*/</emphasis>
50 <emphasis role="keywordtype">void</emphasis>&#32;&#32;&#32;&#32;<link linkend="_push__swap_8h_1a8c475357a8f515fc57ec9c6ae6e9cee3">selection_sort</link>(<link linkend="_structs__list__program">t_list_program</link>&#32;*list_program);
51 <emphasis role="keywordtype">void</emphasis>&#32;&#32;&#32;&#32;<link linkend="_push__swap_8h_1a8d7a0d46a67405d91816a7b6c5dfd476">selection_sort_recursion</link>(<emphasis role="keywordtype">int</emphasis>&#32;*pushes,&#32;<link linkend="_structs__list__program">t_list_program</link>&#32;*list_program);
52 <emphasis role="keywordtype">void</emphasis>&#32;&#32;&#32;&#32;<link linkend="_push__swap_8h_1afc65a8ff615d5f010c90a77d43e99901">sort_3</link>(<link linkend="_push__swap__data_8h_1a3834963377ca73af56f7e6d6f7b1c7bc">t_list_dls</link>&#32;**stack_a,&#32;<link linkend="_structs__list__program">t_list_program</link>&#32;*list_program);
53 <emphasis role="keywordtype">void</emphasis>&#32;&#32;&#32;&#32;<link linkend="_push__swap_8h_1a903c705fc4ddf8716c63da4b393d5e66">selection_sort_merge_back</link>(<emphasis role="keywordtype">int</emphasis>&#32;*pushes,&#32;<link linkend="_structs__list__program">t_list_program</link>&#32;*list_program);
54 <emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;<link linkend="_push__swap_8h_1aa5355356a38fe129c21e05d54bc4b9d4">min_node_pos</link>(<link linkend="_structs__list__program">t_list_program</link>&#32;*list_program);
55 
56 <emphasis role="comment">/*&#32;*****************************************************************&#32;*/</emphasis>
57 <emphasis role="comment">/*&#32;RADIX&#32;SORT&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*/</emphasis>
58 <emphasis role="comment">/*&#32;*****************************************************************&#32;*/</emphasis>
59 <emphasis role="keywordtype">void</emphasis>&#32;&#32;&#32;&#32;<link linkend="_push__swap_8h_1ab6eef28b44540c8e841c0549a0ce8432">radix_sort_pushswap</link>(<link linkend="_structs__list__program">t_list_program</link>&#32;*list_program);
60 <emphasis role="keywordtype">void</emphasis>&#32;&#32;&#32;&#32;<link linkend="_push__swap_8h_1a3c78219d9c39f549c7c051d6f3df2de2">radix_sort_step</link>(<emphasis role="keywordtype">int</emphasis>&#32;bit,&#32;<emphasis role="keywordtype">int</emphasis>&#32;size,&#32;<link linkend="_structs__list__program">t_list_program</link>&#32;*list_program);
61 
62 <emphasis role="comment">/*&#32;*****************************************************************&#32;*/</emphasis>
63 <emphasis role="comment">/*&#32;QUICK&#32;SORT&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*/</emphasis>
64 <emphasis role="comment">/*&#32;*****************************************************************&#32;*/</emphasis>
65 <emphasis role="keywordtype">void</emphasis>&#32;&#32;&#32;&#32;<link linkend="_push__swap_8h_1aa3ace5cfa01a8732fe50b2a306016ca3">quick_sort_pushswap</link>(<link linkend="_structs__list__program">t_list_program</link>&#32;*list_program);
66 <emphasis role="comment">//void&#32;&#32;recursive_split_chunk(t_chunk&#32;*chunk_to_sort,&#32;\</emphasis>
67 <emphasis role="comment">//&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;t_list_program&#32;*list_program);</emphasis>
68 <emphasis role="keywordtype">void</emphasis>&#32;&#32;&#32;&#32;<link linkend="_push__swap_8h_1af226d4d533a1b37b32cce426a743418b">sort_3_chunk</link>(<link linkend="_structs__list__program">t_list_program</link>&#32;*list_program);
69 
70 <emphasis role="comment">/*&#32;*****************************************************************&#32;*/</emphasis>
71 <emphasis role="comment">/*&#32;GEAR&#32;SORT&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*/</emphasis>
72 <emphasis role="comment">/*&#32;*****************************************************************&#32;*/</emphasis>
73 <emphasis role="keywordtype">void</emphasis>&#32;&#32;&#32;&#32;<link linkend="_push__swap_8h_1a94dad898050e696fa4f545c5639799f0">gear_sort_pushswap</link>(<link linkend="_structs__list__program">t_list_program</link>&#32;*list_program);
74 <emphasis role="keywordtype">void</emphasis>&#32;&#32;&#32;&#32;<link linkend="_push__swap_8h_1ae86baab4f6dd3dc1ac734b5a3a862839">sort_gearing</link>(<emphasis role="keywordtype">char</emphasis>&#32;stack_from,&#32;<emphasis role="keywordtype">char</emphasis>&#32;stack_to,&#32;<emphasis role="keywordtype">int</emphasis>&#32;base_case,&#32;\
75 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structs__list__program">t_list_program</link>&#32;*list_program);
76 <emphasis role="keywordtype">void</emphasis>&#32;&#32;&#32;&#32;<link linkend="_push__swap_8h_1af9133ed1b514fc90860dce150471e4cb">sort_move_lower_cost</link>(<emphasis role="keywordtype">char</emphasis>&#32;stack_from,&#32;<link linkend="_structs__move__lower__cost">t_move_lower_cost</link>&#32;*v,&#32;\
77 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structs__list__program">t_list_program</link>&#32;*list_program);
78 <emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;<link linkend="_push__swap_8h_1af609451518018dfea744bcf6d0914c82">node_pos_locator</link>(<emphasis role="keywordtype">int</emphasis>&#32;value,&#32;<link linkend="_structs__list__program">t_list_program</link>&#32;*list_program,&#32;<emphasis role="keywordtype">char</emphasis>&#32;type,&#32;\
79 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;stack_from);
80 <emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;<link linkend="_push__swap_8h_1a6e6fbdc2b632f680e9d9bd82897ae254">sort_gearing_is_base_case</link>(<emphasis role="keywordtype">int</emphasis>&#32;base_case,&#32;<link linkend="_structs__list__program">t_list_program</link>&#32;*list_program);
81 <emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;<link linkend="_push__swap_8h_1a499b0d7d62f18ca9a7d33c016b97ffff">node_pos_locator_is_in_place</link>(<emphasis role="keywordtype">char</emphasis>&#32;stack_from,&#32;<emphasis role="keywordtype">int</emphasis>&#32;value,&#32;\
82 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structs__node__pos__locator">t_node_pos_locator</link>&#32;*v);
83 <emphasis role="keywordtype">void</emphasis>&#32;&#32;&#32;&#32;<link linkend="_push__swap_8h_1a38a7b3158cdf772254cf9e63f31c3fbc">high_up_stack</link>(<link linkend="_structs__list__program">t_list_program</link>&#32;*list_program);
84 <emphasis role="keywordtype">void</emphasis>&#32;&#32;&#32;&#32;<link linkend="_push__swap_8h_1a6860e9765129c5ba9e49e1b94ecbe4f7">low_up_stack</link>(<link linkend="_structs__list__program">t_list_program</link>&#32;*list_program);
85 <emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;<link linkend="_push__swap_8h_1afe4cfd19820a440051688b50dec1b4ce">max_node_finder</link>(<link linkend="_push__swap__data_8h_1a3834963377ca73af56f7e6d6f7b1c7bc">t_list_dls</link>&#32;**stack,&#32;<link linkend="_structs__list__program">t_list_program</link>&#32;*list_program);
86 <emphasis role="keywordtype">void</emphasis>&#32;&#32;&#32;&#32;<link linkend="_push__swap_8h_1a52d4f4cb31fbd8cbc7d92d0276647275">quick_sort_partial</link>(<link linkend="_structs__list__program">t_list_program</link>&#32;*list_program);
87 
88 <emphasis role="comment">/*&#32;*****************************************************************&#32;*/</emphasis>
89 <emphasis role="comment">/*&#32;SMALL&#32;SORT&#32;AND&#32;UTILS&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*/</emphasis>
90 <emphasis role="comment">/*&#32;*****************************************************************&#32;*/</emphasis>
91 <emphasis role="keywordtype">void</emphasis>&#32;&#32;&#32;&#32;<link linkend="_push__swap_8h_1a212e81ec76b01d1d7dcc4e3ab23a21a5">pivot_calculation</link>(<link linkend="_structs__chunk">t_chunk</link>&#32;*chunk_to_sort,&#32;<link linkend="_structs__splits">t_splits</link>&#32;*split_chunks);
92 <emphasis role="keywordtype">void</emphasis>&#32;&#32;&#32;&#32;<link linkend="_push__swap_8h_1a446f354f779f421f069d3755485f57e7">selection_sort_chunk</link>(<link linkend="_structs__list__program">t_list_program</link>&#32;*list_dls_program);
93 <emphasis role="keywordtype">void</emphasis>&#32;&#32;&#32;&#32;<link linkend="_push__swap_8h_1a278415184cb5e8a7eea684b2d06805ee">moves_optimizations</link>(<link linkend="_structs__list__program">t_list_program</link>&#32;*list_program);
94 
95 <emphasis role="comment">//&#32;&#32;▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓&#32;&#32;//</emphasis>
96 <emphasis role="comment">//#########################################################################&#32;*/</emphasis>
97 <emphasis role="comment">//&#32;STACK&#32;MOVES&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*/</emphasis>
98 <emphasis role="comment">//#########################################################################&#32;*/</emphasis>
99 <emphasis role="keywordtype">void</emphasis>&#32;&#32;&#32;&#32;<link linkend="_push__swap_8h_1a52d7746c8b7628a2e18e1069db470556">rotate</link>(<emphasis role="keywordtype">char</emphasis>&#32;*direction,&#32;<emphasis role="keywordtype">char</emphasis>&#32;stack_name,&#32;\
100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structs__list__program">t_list_program</link>&#32;*list_program);
101 <emphasis role="keywordtype">void</emphasis>&#32;&#32;&#32;&#32;<link linkend="_push__swap_8h_1afccc17cf6947e8045b7157ace02a1457">push</link>(<emphasis role="keywordtype">char</emphasis>&#32;direction,&#32;<link linkend="_structs__list__program">t_list_program</link>&#32;*list_program);
102 <emphasis role="keywordtype">void</emphasis>&#32;&#32;&#32;&#32;<link linkend="_push__swap_8h_1aa2036f5bf4b8d176da973726dd806078">swap</link>(<emphasis role="keywordtype">char</emphasis>&#32;stack_name,&#32;<link linkend="_structs__list__program">t_list_program</link>&#32;*list_program);
103 <emphasis role="keywordtype">void</emphasis>&#32;&#32;&#32;&#32;<link linkend="_push__swap_8h_1a3f183f4dffa1387ae0726c9d33625fb5">swap_both</link>(<link linkend="_structs__list__program">t_list_program</link>&#32;*<link linkend="_structs__list__program">t_list_program</link>);
104 <emphasis role="keywordtype">void</emphasis>&#32;&#32;&#32;&#32;<link linkend="_push__swap_8h_1a3358149993390c4484d5ae6a8ada9cf5">rotate_both</link>(<emphasis role="keywordtype">char</emphasis>&#32;*direction,&#32;<link linkend="_structs__list__program">t_list_program</link>&#32;*<link linkend="_structs__list__program">t_list_program</link>);
105 <emphasis role="keywordtype">void</emphasis>&#32;&#32;&#32;&#32;<link linkend="_push__swap_8h_1abfb1a630b30cf90941d0d68d61e3512c">move_stack_fromto</link>(<link linkend="_push__swap__data_8h_1a846546f4c4d173d5bea598069589fa29">t_position</link>&#32;from,&#32;<link linkend="_push__swap__data_8h_1a846546f4c4d173d5bea598069589fa29">t_position</link>&#32;to,&#32;<link linkend="_structs__list__program">t_list_program</link>&#32;\
106 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*list_program);
107 <emphasis role="keywordtype">void</emphasis>&#32;&#32;&#32;&#32;<link linkend="_push__swap_8h_1ac834ac3f6087884281c23c5938452799">move_stack_fromto_case</link>(<emphasis role="keywordtype">char</emphasis>&#32;*move_case,&#32;<link linkend="_structs__list__program">t_list_program</link>&#32;*list_program);
108 
109 <emphasis role="comment">//&#32;&#32;▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓&#32;&#32;//</emphasis>
110 <emphasis role="comment">//#########################################################################&#32;*/</emphasis>
111 <emphasis role="comment">//&#32;UTILS&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*/</emphasis>
112 <emphasis role="comment">//#########################################################################&#32;*/</emphasis>
113 <emphasis role="keywordtype">void</emphasis>&#32;&#32;&#32;&#32;<link linkend="_push__swap_8h_1ae141e32930f0bad65f58459a3c7449dc">add_index_numbers</link>(<link linkend="_push__swap__data_8h_1a3834963377ca73af56f7e6d6f7b1c7bc">t_list_dls</link>&#32;*list);
114 <emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;<link linkend="_push__swap_8h_1ab7f8f4d324a03186d01493e2dc757f7e">digits_to_bits</link>(<emphasis role="keywordtype">int</emphasis>&#32;digits);
115 <emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;<link linkend="_push__swap_8h_1a86efa6bf454fe3d9c4638043d276603b">is_sorted_array_int</link>(<emphasis role="keywordtype">int</emphasis>&#32;*arr,&#32;<emphasis role="keywordtype">int</emphasis>&#32;size);
116 <emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;<link linkend="_push__swap_8h_1ad20dad35a06abceff43bb0f1ddc64700">is_sorted_linked_list</link>(<link linkend="_push__swap__data_8h_1a3834963377ca73af56f7e6d6f7b1c7bc">t_list_dls</link>&#32;*stack);
117 <emphasis role="keywordtype">void</emphasis>&#32;&#32;&#32;&#32;<link linkend="_push__swap_8h_1ad93321e5938c4618cee960c0a3878fc1">is_sorted_linked_list_push</link>(<link linkend="_structs__list__program">t_list_program</link>&#32;*list_program);
118 <emphasis role="keywordtype">void</emphasis>&#32;&#32;&#32;&#32;<link linkend="_push__swap_8h_1af1f154e261fd1c167f2dcbdf952ea1d9">print_results</link>(<link linkend="_structs__list__program">t_list_program</link>&#32;*list_program);
119 
120 <emphasis role="comment">//######################################################################&#32;*/</emphasis>
121 <emphasis role="comment">//&#32;ERROR&#32;HANDLING&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*/</emphasis>
122 <emphasis role="comment">//######################################################################&#32;*/</emphasis>
123 <emphasis role="keywordtype">void</emphasis>&#32;&#32;&#32;&#32;<link linkend="_push__swap_8h_1a485614ab5a13c8271c688910e4728047">error_handling_input_0</link>(<emphasis role="keywordtype">int</emphasis>&#32;argc,&#32;<emphasis role="keywordtype">char</emphasis>&#32;**argv);
124 <emphasis role="keywordtype">void</emphasis>&#32;&#32;&#32;&#32;<link linkend="_push__swap_8h_1a788f5366d812d5836a70746e7ab64897">error_handling_input_1</link>(<link linkend="_structs__list__program">t_list_program</link>&#32;*list_program);
125 
126 <emphasis role="comment">//######################################################################&#32;*/</emphasis>
127 <emphasis role="comment">//&#32;TRACERS&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*/</emphasis>
128 <emphasis role="comment">//######################################################################&#32;*/</emphasis>
129 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">enum</emphasis>&#32;<link linkend="_push__swap_8h_1aed1446a52a83e76b91ffd27be12a1fbd">e_ft_printers_db</link>
130 {
131 &#32;&#32;&#32;&#32;<link linkend="_push__swap_8h_1aed1446a52a83e76b91ffd27be12a1fbda13d000b4d7dc70d90239b7430d1eb6b2">START</link>,
132 &#32;&#32;&#32;&#32;<link linkend="_push__swap_8h_1aed1446a52a83e76b91ffd27be12a1fbdadc6f24fd6915a3f2786a1b7045406924">END</link>,
133 &#32;&#32;&#32;&#32;<link linkend="_push__swap_8h_1aed1446a52a83e76b91ffd27be12a1fbda212984698f4e408302d0f8830c838a60">MOVEF</link>,
134 &#32;&#32;&#32;&#32;<link linkend="_push__swap_8h_1aed1446a52a83e76b91ffd27be12a1fbda3394745a542349c8dd142242d4a58a5b">MOVES</link>,
135 &#32;&#32;&#32;&#32;<link linkend="_push__swap_8h_1aed1446a52a83e76b91ffd27be12a1fbda8e4561d7ccf7a66c49ff0f7bef69f78c">SELEC</link>,
136 &#32;&#32;&#32;&#32;<link linkend="_push__swap_8h_1aed1446a52a83e76b91ffd27be12a1fbda9a4084441c1568887684a4e6acc91948">RADIX</link>,
137 &#32;&#32;&#32;&#32;<link linkend="_push__swap_8h_1aed1446a52a83e76b91ffd27be12a1fbdaef079160a47f3cf267a177cc6400cf1d">QUICK</link>,
138 &#32;&#32;&#32;&#32;<link linkend="_push__swap_8h_1aed1446a52a83e76b91ffd27be12a1fbdae1a5a6a4f78bdf5e9332f96399203fd9">GEAR</link>,
139 &#32;&#32;&#32;&#32;<link linkend="_push__swap_8h_1aed1446a52a83e76b91ffd27be12a1fbda7cf1f5924560c2c48f72f6e1a462e9c9">SPLIT</link>,
140 &#32;&#32;&#32;&#32;<link linkend="_push__swap_8h_1aed1446a52a83e76b91ffd27be12a1fbda1314a9b4a687e32795713508d0813d5b">MERGE_NS</link>,
141 &#32;&#32;&#32;&#32;<link linkend="_push__swap_8h_1aed1446a52a83e76b91ffd27be12a1fbda657ad413e20f69f4a2613e8e2e997c57">MERGE_AS</link>,
142 &#32;&#32;&#32;&#32;<link linkend="_push__swap_8h_1aed1446a52a83e76b91ffd27be12a1fbdad19b70a62f57cd7873f792cffcad687b">PRICES</link>
143 }&#32;&#32;&#32;<link linkend="_push__swap_8h_1a725c14c4f0e63785e0c50ef6dd054ee0">t_ft_printers_db</link>;
144 
145 <emphasis role="keywordtype">void</emphasis>&#32;&#32;&#32;&#32;<link linkend="_push__swap_8h_1adde75d21b7e1086952250fc733726608">sort_stack_dbg</link>(<link linkend="_structs__list__program">t_list_program</link>&#32;*list_program);
146 <emphasis role="keywordtype">void</emphasis>&#32;&#32;&#32;&#32;<link linkend="_push__swap_8h_1a4cfb30dfa1b732308fb83936337b274c">ft_printers</link>(<link linkend="_push__swap_8h_1a725c14c4f0e63785e0c50ef6dd054ee0">t_ft_printers_db</link>&#32;s,&#32;<link linkend="_structs__list__program">t_list_program</link>&#32;*list_program);
147 <emphasis role="keywordtype">void</emphasis>&#32;&#32;&#32;&#32;<link linkend="_push__swap_8h_1a414192e5b97946d1620c336080c7cad0">ft_printers_gearsort</link>(<link linkend="_push__swap_8h_1a725c14c4f0e63785e0c50ef6dd054ee0">t_ft_printers_db</link>&#32;s,&#32;<link linkend="_structs__move__lower__cost">t_move_lower_cost</link>&#32;*v,&#32;\
148 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structs__list__program">t_list_program</link>&#32;*list_program);
149 <emphasis role="keywordtype">void</emphasis>&#32;&#32;&#32;&#32;<link linkend="_push__swap_8h_1a73a471f4371439f8f37cb6ecdf86f32f">printer_dbg_split</link>(<link linkend="_push__swap_8h_1a725c14c4f0e63785e0c50ef6dd054ee0">t_ft_printers_db</link>&#32;s,&#32;\
150 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structs__splits">t_splits</link>&#32;*split_chunks,&#32;<link linkend="_structs__list__program">t_list_program</link>&#32;*list_program);
151 <emphasis role="keywordtype">void</emphasis>&#32;&#32;&#32;&#32;<link linkend="_push__swap_8h_1a59d14dd7e421f30f5a4484598a93d733">printer_dbg_split1</link>(<link linkend="_push__swap_8h_1a725c14c4f0e63785e0c50ef6dd054ee0">t_ft_printers_db</link>&#32;s,&#32;\
152 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structs__chunk1">t_chunk1</link>&#32;*split_chunks,&#32;<link linkend="_structs__list__program">t_list_program</link>&#32;*list_program);
153 
154 <emphasis role="preprocessor">#endif</emphasis>
</programlisting></section>
