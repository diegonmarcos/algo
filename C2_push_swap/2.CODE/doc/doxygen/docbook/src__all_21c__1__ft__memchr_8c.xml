<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_src__all_21c__1__ft__memchr_8c" xml:lang="en-US">
<title>src/checker_bonus/libs/mylibs/mylibc/src/src_all/1c_1_ft_memchr.c File Reference</title>
<indexterm><primary>src/checker_bonus/libs/mylibs/mylibc/src/src_all/1c_1_ft_memchr.c</primary></indexterm>
<programlisting linenumbering="unnumbered">#include &quot;mylibc.h&quot;<?linebreak?></programlisting>Include dependency graph for 1c_1_ft_memchr.c:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="src__all_21c__1__ft__memchr_8c__incl.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>int <link linkend="_src__all_21c__1__ft__memchr_8c_1af17969ee296092eedba9c0f0bb9fd92f">ft_contains</link> (int num, char **argv, int i)</para>
</listitem>
            <listitem><para>char * <link linkend="_src__all_21c__1__ft__memchr_8c_1ae00229613cc0bf361e86dca72ad92591">ft_strnstr</link> (const char *haystack, const char *needle, size_t len)</para>
</listitem>
            <listitem><para>char * <link linkend="_src__all_21c__1__ft__memchr_8c_1a49c260cf80f9997975d6f3ec74ead582">ft_strrchr</link> (const char *s, int c)</para>
</listitem>
            <listitem><para>void * <link linkend="_src__all_21c__1__ft__memchr_8c_1ac9fbfeb0a2013f147fb68e776cc7d031">ft_memmem</link> (const void *haystack, size_t haystacklen, const void *needle, size_t needlelen)</para>
</listitem>
            <listitem><para>void * <link linkend="_src__all_21c__1__ft__memchr_8c_1abf633e8e48a8afbe61947f61de5ac695">ft_memchr</link> (const void *s, int c, size_t n)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Function Documentation</title>
<anchor xml:id="_src__all_21c__1__ft__memchr_8c_1af17969ee296092eedba9c0f0bb9fd92f"/><section>
    <title>ft_contains()</title>
<indexterm><primary>ft_contains</primary><secondary>1c_1_ft_memchr.c</secondary></indexterm>
<indexterm><primary>1c_1_ft_memchr.c</primary><secondary>ft_contains</secondary></indexterm>
<para><computeroutput>int ft_contains (int num, char ** argv, int i)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="src__all_21c__1__ft__memchr_8c_af17969ee296092eedba9c0f0bb9fd92f_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_src__all_21c__1__ft__memchr_8c_1abf633e8e48a8afbe61947f61de5ac695"/><section>
    <title>ft_memchr()</title>
<indexterm><primary>ft_memchr</primary><secondary>1c_1_ft_memchr.c</secondary></indexterm>
<indexterm><primary>1c_1_ft_memchr.c</primary><secondary>ft_memchr</secondary></indexterm>
<para><computeroutput>void * ft_memchr (const void * s, int c, size_t n)</computeroutput></para></section>
<anchor xml:id="_src__all_21c__1__ft__memchr_8c_1ac9fbfeb0a2013f147fb68e776cc7d031"/><section>
    <title>ft_memmem()</title>
<indexterm><primary>ft_memmem</primary><secondary>1c_1_ft_memchr.c</secondary></indexterm>
<indexterm><primary>1c_1_ft_memchr.c</primary><secondary>ft_memmem</secondary></indexterm>
<para><computeroutput>void * ft_memmem (const void * haystack, size_t haystacklen, const void * needle, size_t needlelen)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="src__all_21c__1__ft__memchr_8c_ac9fbfeb0a2013f147fb68e776cc7d031_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_src__all_21c__1__ft__memchr_8c_1ae00229613cc0bf361e86dca72ad92591"/><section>
    <title>ft_strnstr()</title>
<indexterm><primary>ft_strnstr</primary><secondary>1c_1_ft_memchr.c</secondary></indexterm>
<indexterm><primary>1c_1_ft_memchr.c</primary><secondary>ft_strnstr</secondary></indexterm>
<para><computeroutput>char * ft_strnstr (const char * haystack, const char * needle, size_t len)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="src__all_21c__1__ft__memchr_8c_ae00229613cc0bf361e86dca72ad92591_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_src__all_21c__1__ft__memchr_8c_1a49c260cf80f9997975d6f3ec74ead582"/><section>
    <title>ft_strrchr()</title>
<indexterm><primary>ft_strrchr</primary><secondary>1c_1_ft_memchr.c</secondary></indexterm>
<indexterm><primary>1c_1_ft_memchr.c</primary><secondary>ft_strrchr</secondary></indexterm>
<para><computeroutput>char * ft_strrchr (const char * s, int c)</computeroutput></para></section>
</section>
</section>
