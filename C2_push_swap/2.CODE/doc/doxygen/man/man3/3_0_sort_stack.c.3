.TH "src/push_swap/sort/3_0_sort_stack.c" 3 "Sun Mar 16 2025 16:17:05" "push_swap" \" -*- nroff -*-
.ad l
.nh
.SH NAME
src/push_swap/sort/3_0_sort_stack.c \- Implements the main sorting logic for the push_swap program\&.  

.SH SYNOPSIS
.br
.PP
\fC#include 'push_swap\&.h'\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "void \fBsort_stack\fP (\fBt_list_program\fP *list_program)"
.br
.in -1c
.SH "Detailed Description"
.PP 
Implements the main sorting logic for the push_swap program\&. 


.PP
\fBDetails:\fP
.RS 4
This module selects and applies the appropriate sorting algorithm based on the size of stack A:
.RE
.PP
.IP "\(bu" 2
Selection Sort of sorting algorithm for below 50 elements
.IP "\(bu" 2
Radix for 50 to 65 elements
.IP "\(bu" 2
Quick Sort for 65 to 75 elements
.IP "\(bu" 2
Gear Sort for 75 to 100 elements
.IP "\(bu" 2
Gear Sort for 100 to 500 elements
.IP "\(bu" 2
Optimization of moves after sorting:
.IP "  \(bu" 4
Replace with double rotate or double reverse rotate when possible
.IP "  \(bu" 4
Remove unnecessary moves(canceling moves)
.PP

.PP
.PP
\fBFunctions:\fP
.RS 4

.IP "\(bu" 2
void \fBsort_stack(t_list_program *list_program)\fP: Main function to sort the stack using the appropriate algorithm\&.
.IP "\(bu" 2
void \fBselection_sort(t_list_program *list_program)\fP: Sorts the stack using the selection sort algorithm\&.
.IP "\(bu" 2
void \fBradix_sort_pushswap(t_list_program *list_program)\fP: Sorts the stack using the radix sort algorithm\&.
.IP "\(bu" 2
void \fBquick_sort_pushswap(t_list_program *list_program)\fP: Sorts the stack using the quick sort algorithm\&.
.IP "\(bu" 2
void \fBgear_sort_pushswap(t_list_program *list_program)\fP: Sorts the stack using the gear sort algorithm\&.
.IP "\(bu" 2
void \fBsort_stack_dbg(t_list_program *list_program)\fP: Debug function for sorting the stack\&.
.IP "\(bu" 2
void \fBmoves_optimizations(t_list_program *list_program)\fP: Optimizes the moves after sorting\&. 
.PP
.RE
.PP

.SH "Function Documentation"
.PP 
.SS "void sort_stack (\fBt_list_program\fP * list_program)"

.SH "Author"
.PP 
Generated automatically by Doxygen for push_swap from the source code\&.
