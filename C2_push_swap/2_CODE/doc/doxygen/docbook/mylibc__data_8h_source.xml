<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_mylibc__data_8h_source" xml:lang="en-US">
<title>mylibc_data.h</title>
<indexterm><primary>src/checker_bonus/libs/mylibs/mylibc/inc/mylibc_data.h</primary></indexterm>
Go to the documentation of this file.<programlisting linenumbering="unnumbered">1 <emphasis role="comment">/*&#32;**************************************************************************&#32;*/</emphasis>
2 <emphasis role="comment">/*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*/</emphasis>
3 <emphasis role="comment">/*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:::&#32;&#32;&#32;&#32;&#32;&#32;::::::::&#32;&#32;&#32;*/</emphasis>
4 <emphasis role="comment">/*&#32;&#32;&#32;mylibc_data.h&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;:+:&#32;&#32;&#32;&#32;&#32;&#32;:+:&#32;&#32;&#32;&#32;:+:&#32;&#32;&#32;*/</emphasis>
5 <emphasis role="comment">/*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+:+&#32;+:+&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+:+&#32;&#32;&#32;&#32;&#32;*/</emphasis>
6 <emphasis role="comment">/*&#32;&#32;&#32;By:&#32;dinepomu&#32;&lt;dinepomu@student.42berlin.de&gt;&#32;&#32;&#32;&#32;+#+&#32;&#32;+:+&#32;&#32;&#32;&#32;&#32;&#32;&#32;+#+&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*/</emphasis>
7 <emphasis role="comment">/*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;+#+#+#+#+#+&#32;&#32;&#32;+#+&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*/</emphasis>
8 <emphasis role="comment">/*&#32;&#32;&#32;Created:&#32;2025/02/03&#32;14:19:46&#32;by&#32;dinepomu&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;#+#&#32;&#32;&#32;&#32;#+#&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*/</emphasis>
9 <emphasis role="comment">/*&#32;&#32;&#32;Updated:&#32;2025/03/19&#32;10:52:30&#32;by&#32;dinepomu&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;###&#32;&#32;&#32;########.fr&#32;&#32;&#32;&#32;&#32;&#32;&#32;*/</emphasis>
10 <emphasis role="comment">/*&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*/</emphasis>
11 <emphasis role="comment">/*&#32;**************************************************************************&#32;*/</emphasis>
12 
13 <emphasis role="comment">/*&#32;**************************************************************************&#32;*/</emphasis>
14 <emphasis role="comment">/*&#32;https://linktr.ee/diegonmarcos&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*/</emphasis>
15 <emphasis role="comment">/*&#32;**************************************************************************&#32;*/</emphasis>
16 
17 <emphasis role="preprocessor">#ifndef&#32;MYLIBC_DATA_H</emphasis>
18 <emphasis role="preprocessor">#&#32;define&#32;MYLIBC_DATA_H</emphasis>
19 
20 <emphasis role="preprocessor">#&#32;include&#32;&quot;<link linkend="_mylibc_8h">mylibc.h</link>&quot;</emphasis>
21 <emphasis role="preprocessor">#&#32;include&#32;&quot;<link linkend="_mylibc__defines_8h">mylibc_defines.h</link>&quot;</emphasis>
22 
23 <emphasis role="comment">//&#32;▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓&#32;//</emphasis>
24 <emphasis role="comment">/*&#32;*************************************************************&#32;*/</emphasis>
25 <emphasis role="comment">/*&#32;MEMORY&#32;MANAGEMENT&#32;/&#32;GARBAGE&#32;COLLECTOR&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*/</emphasis>
26 <emphasis role="comment">/*&#32;*************************************************************&#32;*/</emphasis>
27 
28 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_structs__list__garbage">s_list_garbage</link>
29 {
30 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;&#32;&#32;&#32;*<link linkend="_structs__list__garbage_1aa52be852d5e0f5956c8bcb2ae6776cbd">allocated_pointers</link>[<link linkend="_push__swap__data_8h_1aed098444ca0e8ff022726a96d3535474">MAX_ALLOCATIONS</link>];
31 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;<link linkend="_structs__list__garbage_1afaf426689107186c9a216242d500c5cd">blocks_count</link>;
32 }&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_mylibc__data_8h_1a99ef35a30f94abb8960cfa09342f9ab6">t_list_garbage</link>;
33 
34 <emphasis role="keywordtype">void</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*<link linkend="_mylibc__data_8h_1a00872120017ab308f47890f195c6df68">ft_malloc_gb</link>(<emphasis role="keywordtype">size_t</emphasis>&#32;size,&#32;<link linkend="_structs__list__garbage">t_list_garbage</link>&#32;*list_garbage);
35 <emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_mylibc__data_8h_1a0c07974bd4f70f565a546f656e039718">add_allocation</link>(<emphasis role="keywordtype">void</emphasis>&#32;*ptr,&#32;<link linkend="_structs__list__garbage">t_list_garbage</link>&#32;*list_garbage);
36 <emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_mylibc__data_8h_1abdadd82f271dbbcd1574fcaf55bb66b1">is_allocated</link>(<emphasis role="keywordtype">void</emphasis>&#32;*ptr,&#32;<link linkend="_structs__list__garbage">t_list_garbage</link>&#32;*list_garbage);
37 <emphasis role="keywordtype">void</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_mylibc__data_8h_1a8c2facdc4545aa776f0aeac23fcdfcba">remove_allocation</link>(<emphasis role="keywordtype">void</emphasis>&#32;*ptr,&#32;<link linkend="_structs__list__garbage">t_list_garbage</link>&#32;*list_garbage);
38 <emphasis role="keywordtype">void</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_mylibc__data_8h_1aef3d5c31ee22829efe8a302c2e6290f5">ft_free_gb</link>(<emphasis role="keywordtype">void</emphasis>&#32;*ptr,&#32;<link linkend="_structs__list__garbage">t_list_garbage</link>&#32;*list_garbage);
39 <emphasis role="keywordtype">void</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_mylibc__data_8h_1a943255f04483f31a39a090d0ab7752d1">ft_free_gb_all</link>(<link linkend="_structs__list__garbage">t_list_garbage</link>&#32;*list_garbage);
40 <link linkend="_structs__list__garbage">t_list_garbage</link>&#32;&#32;*<link linkend="_mylibc__data_8h_1a58fd95b2a8b3ef99f250c6db28ee87db">ft_initializator_list_gargabe</link>(<emphasis role="keywordtype">void</emphasis>);
41 <emphasis role="comment">//#&#32;include&#32;&quot;ft_mylib_utils.h&quot;&#32;//*ft_initializator_list_gargabe(void);</emphasis>
42 
43 <emphasis role="comment">/*&#32;*************************************************************&#32;*/</emphasis>
44 <emphasis role="comment">/*&#32;DATA&#32;STRUCTURE&#32;/&#32;HASHTABLE/MAP/DIC&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*/</emphasis>
45 <emphasis role="comment">/*&#32;*************************************************************&#32;*/</emphasis>
46 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_structs__list__hashmap">s_list_hashmap</link>
47 {
48 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*<link linkend="_structs__list__hashmap_1a5892a9181e6a332f84d27aecd41dcd12">key</link>;
49 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structs__list__hashmap_1ac4f474c82e82cbb89ca7c36dd52be0ed">value</link>;
50 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_structs__list__hashmap">s_list_hashmap</link>&#32;&#32;&#32;*<link linkend="_structs__list__hashmap_1a41b6e951e6a60ebcba758072caf4cebb">next</link>;
51 }&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_mylibc__data_8h_1a47190768e477b2c92e154ae3bb164af6">t_list_hashmap</link>;
52 
53 <emphasis role="keywordtype">void</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_mylibc__data_8h_1a470ef49ee977b142f6fcfc281753d60c">insert</link>(<link linkend="_structs__list__hashmap">t_list_hashmap</link>&#32;**table,&#32;<emphasis role="keywordtype">int</emphasis>&#32;size,
54 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*<link linkend="_structs__list__hashmap_1a5892a9181e6a332f84d27aecd41dcd12">key</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_structs__list__hashmap_1ac4f474c82e82cbb89ca7c36dd52be0ed">value</link>);
55 <emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_mylibc__data_8h_1aafe95c17b204c6bca2e6c00c7aac86d2">get</link>(<link linkend="_structs__list__hashmap">t_list_hashmap</link>&#32;**table,&#32;<emphasis role="keywordtype">int</emphasis>&#32;size,&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;*<link linkend="_structs__list__hashmap_1a5892a9181e6a332f84d27aecd41dcd12">key</link>);
56 <emphasis role="keywordtype">void</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_mylibc__data_8h_1a291459160fdb3d7c3cd8d4ed2e8a0084">free_hashtable</link>(<link linkend="_structs__list__hashmap">t_list_hashmap</link>&#32;**table,&#32;<emphasis role="keywordtype">int</emphasis>&#32;size);
57 <emphasis role="keywordtype">size_t</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_mylibc__data_8h_1a38bdb928f610c3d3b1f6688b38e25e48">hash</link>(<emphasis role="keywordtype">char</emphasis>&#32;*<link linkend="_structs__list__hashmap_1a5892a9181e6a332f84d27aecd41dcd12">key</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;size);
58 <link linkend="_structs__list__hashmap">t_list_hashmap</link>&#32;&#32;*<link linkend="_mylibc__data_8h_1a10c42bdf0b6850e5f908df3d4f6a6561">create_node</link>(<emphasis role="keywordtype">char</emphasis>&#32;*<link linkend="_structs__list__hashmap_1a5892a9181e6a332f84d27aecd41dcd12">key</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_structs__list__hashmap_1ac4f474c82e82cbb89ca7c36dd52be0ed">value</link>);
59 
60 <emphasis role="comment">/*&#32;*************************************************************&#32;*/</emphasis>
61 <emphasis role="comment">/*&#32;*************************************************************&#32;*/</emphasis>
62 <emphasis role="comment">//&#32;DATA&#32;STRUCTURE&#32;FOR&#32;SINGLY&#32;LINEKD&#32;LIST</emphasis>
63 
64 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_structs__list__s">s_list_s</link>
65 {
66 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*<link linkend="_structs__list__s_1a3d6d14728fec84498eff595a3e31d15a">content</link>;
67 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_structs__list__s">s_list_s</link>&#32;&#32;&#32;&#32;&#32;*<link linkend="_structs__list__s_1adb4fdc936fb98b89fc2b2273249d08bf">next</link>;
68 }&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_mylibc__data_8h_1ab4eb3158d2af72143b6d52db2d9a3eeb">t_list_s</link>;
69 
70 <emphasis role="keywordtype">void</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_mylibc__data_8h_1a4cf3dda016ffda4cc7f225b30a54061b">ft_free_ls_simple</link>(<link linkend="_structs__list__s">t_list_s</link>&#32;*stack);
71 <link linkend="_structs__list__s">t_list_s</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*<link linkend="_mylibc__data_8h_1a1b4b88913e5e042bb83a24ac2f4087fc">ft_lstnew_s</link>(<emphasis role="keywordtype">void</emphasis>&#32;*<link linkend="_structs__list__s_1a3d6d14728fec84498eff595a3e31d15a">content</link>);
72 <emphasis role="keywordtype">void</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_mylibc__data_8h_1a3c2e74bb51ab5690ce73ddf9b4ef3feb">ft_lstadd_front_s</link>(<link linkend="_structs__list__s">t_list_s</link>&#32;**lst,&#32;<link linkend="_structs__list__s">t_list_s</link>&#32;*<emphasis role="keyword">new</emphasis>);
73 <emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_mylibc__data_8h_1af4d50c79841850b728676dfbeebc30f2">ft_lstsize_s</link>(<link linkend="_structs__list__s">t_list_s</link>&#32;*lst);
74 <link linkend="_structs__list__s">t_list_s</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*<link linkend="_mylibc__data_8h_1a5884aaca7496ffc8e023a25fd4a82e04">ft_lstlast_s</link>(<link linkend="_structs__list__s">t_list_s</link>&#32;*lst);
75 <emphasis role="keywordtype">void</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_mylibc__data_8h_1a9a626c611a2a0a2d6361dd3a160cb3b5">ft_lstadd_back_s</link>(<link linkend="_structs__list__s">t_list_s</link>&#32;**lst,&#32;<link linkend="_structs__list__s">t_list_s</link>&#32;*<emphasis role="keyword">new</emphasis>);
76 <emphasis role="keywordtype">void</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_mylibc__data_8h_1a33aff2e2125f56fee46c82e3c3b7a9aa">ft_lstdelone_s</link>(<link linkend="_structs__list__s">t_list_s</link>&#32;*lst,&#32;<emphasis role="keywordtype">void</emphasis>&#32;(*del)(<emphasis role="keywordtype">void</emphasis>*));
77 <emphasis role="keywordtype">void</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_mylibc__data_8h_1aeace56ca809860377717a27c41500cf3">ft_lstclear_s</link>(<link linkend="_structs__list__s">t_list_s</link>&#32;**lst,&#32;<emphasis role="keywordtype">void</emphasis>&#32;(*del)(<emphasis role="keywordtype">void</emphasis>*));
78 <emphasis role="keywordtype">void</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_mylibc__data_8h_1a2db243f45e4ab42d4a7a8fd3128e4b5d">ft_lstiter_s</link>(<link linkend="_structs__list__s">t_list_s</link>&#32;*lst,&#32;<emphasis role="keywordtype">void</emphasis>&#32;(*f)(<emphasis role="keywordtype">void</emphasis>*));
79 <link linkend="_structs__list__s">t_list_s</link>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*<link linkend="_mylibc__data_8h_1a940520a5d11ffc84c845901f20834c74">ft_lstmap_s</link>(<link linkend="_structs__list__s">t_list_s</link>&#32;*lst,&#32;<emphasis role="keywordtype">void</emphasis>&#32;*(*f)(<emphasis role="keywordtype">void</emphasis>*),&#32;\
80 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordtype">void</emphasis>&#32;(*del)(<emphasis role="keywordtype">void</emphasis>*));
81 
82 <emphasis role="comment">/*&#32;*************************************************************&#32;*/</emphasis>
83 <emphasis role="comment">/*&#32;*************************************************************&#32;*/</emphasis>
84 <emphasis role="comment">//&#32;DATA&#32;STRUCTURE&#32;FOR&#32;DOUBLY&#32;LINKED&#32;LIST</emphasis>
85 
86 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_structs__list__dls">s_list_dls</link>
87 {
88 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structs__list__dls_1ac4f474c82e82cbb89ca7c36dd52be0ed">value</link>;
89 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structs__list__dls_1a750b5d744c39a06bfb13e6eb010e35d0">index</link>;
90 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_structs__list__dls">s_list_dls</link>&#32;&#32;&#32;*<link linkend="_structs__list__dls_1a155fac495ba99d5d57db7b5b1a052953">next</link>;
91 &#32;&#32;&#32;&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_structs__list__dls">s_list_dls</link>&#32;&#32;&#32;*<link linkend="_structs__list__dls_1aa1e5c7ab9eb11869a7bd28f83f1b6ee1">prev</link>;
92 }&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_mylibc__data_8h_1a3834963377ca73af56f7e6d6f7b1c7bc">t_list_dls</link>;
93 
94 <link linkend="_structs__list__dls">t_list_dls</link>&#32;&#32;&#32;&#32;&#32;&#32;*<link linkend="_mylibc__data_8h_1af42a9272b49225ae11a76000d24bbdce">array_to_d_linked_list</link>(<emphasis role="keywordtype">char</emphasis>&#32;**argv);
95 <link linkend="_structs__list__dls">t_list_dls</link>&#32;&#32;&#32;&#32;&#32;&#32;*<link linkend="_mylibc__data_8h_1a443cc5de0e99a395115e9c9143a06567">array_int_to_d_linked_list</link>(<emphasis role="keywordtype">int</emphasis>&#32;*argv,&#32;<emphasis role="keywordtype">int</emphasis>&#32;size);
96 <link linkend="_structs__list__dls">t_list_dls</link>&#32;&#32;&#32;&#32;&#32;&#32;*<link linkend="_mylibc__data_8h_1a10717fc853b7947e8aac1a498b4b48e8">ft_lstnew</link>(<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_structs__list__dls_1ac4f474c82e82cbb89ca7c36dd52be0ed">value</link>,&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_structs__list__dls_1a750b5d744c39a06bfb13e6eb010e35d0">index</link>);
97 <emphasis role="keywordtype">void</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_mylibc__data_8h_1aebe986eec4adbb6158cfdb511736bdad">ft_lstadd_back</link>(<link linkend="_structs__list__dls">t_list_dls</link>&#32;**stack,&#32;<link linkend="_structs__list__dls">t_list_dls</link>&#32;*new_node);
98 <emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_mylibc__data_8h_1a05000302246b576df33f1f89ae3d4f18">ft_lstsize</link>(<link linkend="_structs__list__dls">t_list_dls</link>&#32;*lst);
99 <link linkend="_structs__list__dls">t_list_dls</link>&#32;&#32;&#32;&#32;&#32;&#32;*<link linkend="_mylibc__data_8h_1a3e1cdaa6773961f611986f1a682e3a90">find_min_node</link>(<link linkend="_structs__list__dls">t_list_dls</link>&#32;*stack);
100 <emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_mylibc__data_8h_1addccbd0db729b75aff320d1825e9bc50">find_min_node1</link>(<link linkend="_structs__list__dls">t_list_dls</link>&#32;*stack);
101 <emphasis role="keywordtype">void</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_mylibc__data_8h_1a9a5a38ef3b1f50be50a9b7d86591274b">ft_swap_pointers</link>(<link linkend="_structs__list__dls">t_list_dls</link>&#32;**a,&#32;<link linkend="_structs__list__dls">t_list_dls</link>&#32;**b);
102 <emphasis role="keywordtype">void</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_mylibc__data_8h_1acbb080f965dc3107b71cef2afcb6ecff">ft_print_ls_doubly</link>(<link linkend="_structs__list__dls">t_list_dls</link>&#32;*stack);
103 <emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_mylibc__data_8h_1a7d34494a63b8833fcba0825eac851232">ft_print_ls_doubly_fd_int</link>(<emphasis role="keywordtype">long</emphasis>&#32;Fd,&#32;<link linkend="_structs__list__dls">t_list_dls</link>&#32;*stack);
104 <emphasis role="keywordtype">void</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_mylibc__data_8h_1ac4470e5a8fb5cb7816ff2596bd1713d5">ft_free_ls_doubly</link>(<link linkend="_structs__list__dls">t_list_dls</link>&#32;*stack);
105 
106 <emphasis role="comment">/*&#32;*************************************************************&#32;*/</emphasis>
107 <emphasis role="comment">/*&#32;*************************************************************&#32;*/</emphasis>
108 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_structs__list__snprintf">s_list_snprintf</link>
109 {
110 &#32;&#32;&#32;&#32;<emphasis role="keyword">const</emphasis>&#32;<emphasis role="keywordtype">char</emphasis>&#32;&#32;*<link linkend="_structs__list__snprintf_1a6bd2bb5fcc7628a640958994a22f997c">format</link>;
111 &#32;&#32;&#32;&#32;va_list&#32;&#32;&#32;&#32;&#32;<link linkend="_structs__list__snprintf_1aaccd55b82ca2bc0f01757348bc7a2afa">args</link>;
112 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">char</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*<link linkend="_structs__list__snprintf_1af56986a039ad81a1bffd79464149c488">str_p</link>;
113 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">size_t</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structs__list__snprintf_1ad701da283fb2b3da2e96be045e0ccfa0">remaining</link>;
114 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_structs__list__snprintf_1afed088663f8704004425cdae2120b9b3">len</link>;
115 }&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_mylibc__data_8h_1a93c184abd1f413046ea3ca101ecca48f">t_list_snprintf</link>;
116 <emphasis role="comment">/*&#32;*************************************************************&#32;*/</emphasis>
117 <emphasis role="comment">/*&#32;*************************************************************&#32;*/</emphasis>
118 <emphasis role="keyword">typedef</emphasis>&#32;<emphasis role="keyword">struct&#32;</emphasis><link linkend="_structs__bresenham">s_bresenham</link>
119 {
120 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_structs__bresenham_1a97650a9c1395589a56789a90b5bf8d0c">x0</link>;
121 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_structs__bresenham_1a6172bea3fd23fa3631c9e19851754db6">y0</link>;
122 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_structs__bresenham_1a97fcb0e1731b36905e90757f211b1340">x1</link>;
123 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_structs__bresenham_1a886daa12d11655f342168e87c7c0b1cb">y1</link>;
124 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_structs__bresenham_1a6a0d40b2ed6d9e674f93396212f0028f">dx</link>;
125 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_structs__bresenham_1a4817151aee120cc100c400d3076f4b93">dy</link>;
126 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_structs__bresenham_1a699a96985661e4518b86127b4e63c3a8">sx</link>;
127 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_structs__bresenham_1affcd3fe43d73220dd7b3e6bde969e65c">sy</link>;
128 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">int</emphasis>&#32;<link linkend="_structs__bresenham_1a6ce68847c12434f60d1b2654a3dc3409">err</link>;
129 }&#32;&#32;&#32;&#32;&#32;&#32;&#32;<link linkend="_mylibc__data_8h_1a755e2b4bf9298aa40dca560c7f27f3d1">t_bresenham</link>;
130 
131 <emphasis role="preprocessor">#endif</emphasis>
</programlisting></section>
