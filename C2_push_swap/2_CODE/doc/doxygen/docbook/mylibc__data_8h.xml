<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_mylibc__data_8h" xml:lang="en-US">
<title>src/checker_bonus/libs/mylibs/mylibc/inc/mylibc_data.h File Reference</title>
<indexterm><primary>src/checker_bonus/libs/mylibs/mylibc/inc/mylibc_data.h</primary></indexterm>
<programlisting linenumbering="unnumbered">#include &quot;mylibc.h&quot;<?linebreak?>#include &quot;mylibc_defines.h&quot;<?linebreak?></programlisting>Include dependency graph for mylibc_data.h:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="mylibc__data_8h__incl.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
This graph shows which files directly or indirectly include this file:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="mylibc__data_8h__dep__incl.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
<simplesect>
    <title>Data Structures    </title>
        <itemizedlist>
            <listitem><para>struct <link linkend="_structs__list__garbage">s_list_garbage</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structs__list__hashmap">s_list_hashmap</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structs__list__s">s_list_s</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structs__list__dls">s_list_dls</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structs__list__snprintf">s_list_snprintf</link></para>
</listitem>
            <listitem><para>struct <link linkend="_structs__bresenham">s_bresenham</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Typedefs    </title>
        <itemizedlist>
            <listitem><para>typedef struct <link linkend="_structs__list__garbage">s_list_garbage</link> <link linkend="_mylibc__data_8h_1a99ef35a30f94abb8960cfa09342f9ab6">t_list_garbage</link></para>
</listitem>
            <listitem><para>typedef struct <link linkend="_structs__list__hashmap">s_list_hashmap</link> <link linkend="_mylibc__data_8h_1a47190768e477b2c92e154ae3bb164af6">t_list_hashmap</link></para>
</listitem>
            <listitem><para>typedef struct <link linkend="_structs__list__s">s_list_s</link> <link linkend="_mylibc__data_8h_1ab4eb3158d2af72143b6d52db2d9a3eeb">t_list_s</link></para>
</listitem>
            <listitem><para>typedef struct <link linkend="_structs__list__dls">s_list_dls</link> <link linkend="_mylibc__data_8h_1a3834963377ca73af56f7e6d6f7b1c7bc">t_list_dls</link></para>
</listitem>
            <listitem><para>typedef struct <link linkend="_structs__list__snprintf">s_list_snprintf</link> <link linkend="_mylibc__data_8h_1a93c184abd1f413046ea3ca101ecca48f">t_list_snprintf</link></para>
</listitem>
            <listitem><para>typedef struct <link linkend="_structs__bresenham">s_bresenham</link> <link linkend="_mylibc__data_8h_1a755e2b4bf9298aa40dca560c7f27f3d1">t_bresenham</link></para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions    </title>
        <itemizedlist>
            <listitem><para>void * <link linkend="_mylibc__data_8h_1a00872120017ab308f47890f195c6df68">ft_malloc_gb</link> (size_t size, <link linkend="_push__swap__data_8h_1a99ef35a30f94abb8960cfa09342f9ab6">t_list_garbage</link> *list_garbage)</para>
</listitem>
            <listitem><para>int <link linkend="_mylibc__data_8h_1a0c07974bd4f70f565a546f656e039718">add_allocation</link> (void *ptr, <link linkend="_push__swap__data_8h_1a99ef35a30f94abb8960cfa09342f9ab6">t_list_garbage</link> *list_garbage)</para>
</listitem>
            <listitem><para>int <link linkend="_mylibc__data_8h_1abdadd82f271dbbcd1574fcaf55bb66b1">is_allocated</link> (void *ptr, <link linkend="_push__swap__data_8h_1a99ef35a30f94abb8960cfa09342f9ab6">t_list_garbage</link> *list_garbage)</para>
</listitem>
            <listitem><para>void <link linkend="_mylibc__data_8h_1a8c2facdc4545aa776f0aeac23fcdfcba">remove_allocation</link> (void *ptr, <link linkend="_push__swap__data_8h_1a99ef35a30f94abb8960cfa09342f9ab6">t_list_garbage</link> *list_garbage)</para>
</listitem>
            <listitem><para>void <link linkend="_mylibc__data_8h_1aef3d5c31ee22829efe8a302c2e6290f5">ft_free_gb</link> (void *ptr, <link linkend="_push__swap__data_8h_1a99ef35a30f94abb8960cfa09342f9ab6">t_list_garbage</link> *list_garbage)</para>
</listitem>
            <listitem><para>void <link linkend="_mylibc__data_8h_1a943255f04483f31a39a090d0ab7752d1">ft_free_gb_all</link> (<link linkend="_push__swap__data_8h_1a99ef35a30f94abb8960cfa09342f9ab6">t_list_garbage</link> *list_garbage)</para>
</listitem>
            <listitem><para><link linkend="_push__swap__data_8h_1a99ef35a30f94abb8960cfa09342f9ab6">t_list_garbage</link> * <link linkend="_mylibc__data_8h_1a58fd95b2a8b3ef99f250c6db28ee87db">ft_initializator_list_gargabe</link> (void)</para>
</listitem>
            <listitem><para>void <link linkend="_mylibc__data_8h_1a470ef49ee977b142f6fcfc281753d60c">insert</link> (<link linkend="_mylibc__data_8h_1a47190768e477b2c92e154ae3bb164af6">t_list_hashmap</link> **table, int size, const char *key, int value)</para>
</listitem>
            <listitem><para>int <link linkend="_mylibc__data_8h_1aafe95c17b204c6bca2e6c00c7aac86d2">get</link> (<link linkend="_mylibc__data_8h_1a47190768e477b2c92e154ae3bb164af6">t_list_hashmap</link> **table, int size, const char *key)</para>
</listitem>
            <listitem><para>void <link linkend="_mylibc__data_8h_1a291459160fdb3d7c3cd8d4ed2e8a0084">free_hashtable</link> (<link linkend="_mylibc__data_8h_1a47190768e477b2c92e154ae3bb164af6">t_list_hashmap</link> **table, int size)</para>
</listitem>
            <listitem><para>size_t <link linkend="_mylibc__data_8h_1a38bdb928f610c3d3b1f6688b38e25e48">hash</link> (char *key, int size)</para>
</listitem>
            <listitem><para><link linkend="_mylibc__data_8h_1a47190768e477b2c92e154ae3bb164af6">t_list_hashmap</link> * <link linkend="_mylibc__data_8h_1a10c42bdf0b6850e5f908df3d4f6a6561">create_node</link> (char *key, int value)</para>
</listitem>
            <listitem><para>void <link linkend="_mylibc__data_8h_1a4cf3dda016ffda4cc7f225b30a54061b">ft_free_ls_simple</link> (<link linkend="_mylibc__data_8h_1ab4eb3158d2af72143b6d52db2d9a3eeb">t_list_s</link> *stack)</para>
</listitem>
            <listitem><para><link linkend="_mylibc__data_8h_1ab4eb3158d2af72143b6d52db2d9a3eeb">t_list_s</link> * <link linkend="_mylibc__data_8h_1a1b4b88913e5e042bb83a24ac2f4087fc">ft_lstnew_s</link> (void *content)</para>
</listitem>
            <listitem><para>void <link linkend="_mylibc__data_8h_1a3c2e74bb51ab5690ce73ddf9b4ef3feb">ft_lstadd_front_s</link> (<link linkend="_mylibc__data_8h_1ab4eb3158d2af72143b6d52db2d9a3eeb">t_list_s</link> **lst, <link linkend="_mylibc__data_8h_1ab4eb3158d2af72143b6d52db2d9a3eeb">t_list_s</link> *new)</para>
</listitem>
            <listitem><para>int <link linkend="_mylibc__data_8h_1af4d50c79841850b728676dfbeebc30f2">ft_lstsize_s</link> (<link linkend="_mylibc__data_8h_1ab4eb3158d2af72143b6d52db2d9a3eeb">t_list_s</link> *lst)</para>
</listitem>
            <listitem><para><link linkend="_mylibc__data_8h_1ab4eb3158d2af72143b6d52db2d9a3eeb">t_list_s</link> * <link linkend="_mylibc__data_8h_1a5884aaca7496ffc8e023a25fd4a82e04">ft_lstlast_s</link> (<link linkend="_mylibc__data_8h_1ab4eb3158d2af72143b6d52db2d9a3eeb">t_list_s</link> *lst)</para>
</listitem>
            <listitem><para>void <link linkend="_mylibc__data_8h_1a9a626c611a2a0a2d6361dd3a160cb3b5">ft_lstadd_back_s</link> (<link linkend="_mylibc__data_8h_1ab4eb3158d2af72143b6d52db2d9a3eeb">t_list_s</link> **lst, <link linkend="_mylibc__data_8h_1ab4eb3158d2af72143b6d52db2d9a3eeb">t_list_s</link> *new)</para>
</listitem>
            <listitem><para>void <link linkend="_mylibc__data_8h_1a33aff2e2125f56fee46c82e3c3b7a9aa">ft_lstdelone_s</link> (<link linkend="_mylibc__data_8h_1ab4eb3158d2af72143b6d52db2d9a3eeb">t_list_s</link> *lst, void(*del)(void *))</para>
</listitem>
            <listitem><para>void <link linkend="_mylibc__data_8h_1aeace56ca809860377717a27c41500cf3">ft_lstclear_s</link> (<link linkend="_mylibc__data_8h_1ab4eb3158d2af72143b6d52db2d9a3eeb">t_list_s</link> **lst, void(*del)(void *))</para>
</listitem>
            <listitem><para>void <link linkend="_mylibc__data_8h_1a2db243f45e4ab42d4a7a8fd3128e4b5d">ft_lstiter_s</link> (<link linkend="_mylibc__data_8h_1ab4eb3158d2af72143b6d52db2d9a3eeb">t_list_s</link> *lst, void(*f)(void *))</para>
</listitem>
            <listitem><para><link linkend="_mylibc__data_8h_1ab4eb3158d2af72143b6d52db2d9a3eeb">t_list_s</link> * <link linkend="_mylibc__data_8h_1a940520a5d11ffc84c845901f20834c74">ft_lstmap_s</link> (<link linkend="_mylibc__data_8h_1ab4eb3158d2af72143b6d52db2d9a3eeb">t_list_s</link> *lst, void *(*f)(void *), void(*del)(void *))</para>
</listitem>
            <listitem><para><link linkend="_push__swap__data_8h_1a3834963377ca73af56f7e6d6f7b1c7bc">t_list_dls</link> * <link linkend="_mylibc__data_8h_1af42a9272b49225ae11a76000d24bbdce">array_to_d_linked_list</link> (char **argv)</para>
</listitem>
            <listitem><para><link linkend="_push__swap__data_8h_1a3834963377ca73af56f7e6d6f7b1c7bc">t_list_dls</link> * <link linkend="_mylibc__data_8h_1a443cc5de0e99a395115e9c9143a06567">array_int_to_d_linked_list</link> (int *argv, int size)</para>
</listitem>
            <listitem><para><link linkend="_push__swap__data_8h_1a3834963377ca73af56f7e6d6f7b1c7bc">t_list_dls</link> * <link linkend="_mylibc__data_8h_1a10717fc853b7947e8aac1a498b4b48e8">ft_lstnew</link> (int value, int index)</para>
</listitem>
            <listitem><para>void <link linkend="_mylibc__data_8h_1aebe986eec4adbb6158cfdb511736bdad">ft_lstadd_back</link> (<link linkend="_push__swap__data_8h_1a3834963377ca73af56f7e6d6f7b1c7bc">t_list_dls</link> **stack, <link linkend="_push__swap__data_8h_1a3834963377ca73af56f7e6d6f7b1c7bc">t_list_dls</link> *new_node)</para>
</listitem>
            <listitem><para>int <link linkend="_mylibc__data_8h_1a05000302246b576df33f1f89ae3d4f18">ft_lstsize</link> (<link linkend="_push__swap__data_8h_1a3834963377ca73af56f7e6d6f7b1c7bc">t_list_dls</link> *lst)</para>
</listitem>
            <listitem><para><link linkend="_push__swap__data_8h_1a3834963377ca73af56f7e6d6f7b1c7bc">t_list_dls</link> * <link linkend="_mylibc__data_8h_1a3e1cdaa6773961f611986f1a682e3a90">find_min_node</link> (<link linkend="_push__swap__data_8h_1a3834963377ca73af56f7e6d6f7b1c7bc">t_list_dls</link> *stack)</para>
</listitem>
            <listitem><para>int <link linkend="_mylibc__data_8h_1addccbd0db729b75aff320d1825e9bc50">find_min_node1</link> (<link linkend="_push__swap__data_8h_1a3834963377ca73af56f7e6d6f7b1c7bc">t_list_dls</link> *stack)</para>
</listitem>
            <listitem><para>void <link linkend="_mylibc__data_8h_1a9a5a38ef3b1f50be50a9b7d86591274b">ft_swap_pointers</link> (<link linkend="_push__swap__data_8h_1a3834963377ca73af56f7e6d6f7b1c7bc">t_list_dls</link> **a, <link linkend="_push__swap__data_8h_1a3834963377ca73af56f7e6d6f7b1c7bc">t_list_dls</link> **b)</para>
</listitem>
            <listitem><para>void <link linkend="_mylibc__data_8h_1acbb080f965dc3107b71cef2afcb6ecff">ft_print_ls_doubly</link> (<link linkend="_push__swap__data_8h_1a3834963377ca73af56f7e6d6f7b1c7bc">t_list_dls</link> *stack)</para>
</listitem>
            <listitem><para>int <link linkend="_mylibc__data_8h_1a7d34494a63b8833fcba0825eac851232">ft_print_ls_doubly_fd_int</link> (long Fd, <link linkend="_push__swap__data_8h_1a3834963377ca73af56f7e6d6f7b1c7bc">t_list_dls</link> *stack)</para>
</listitem>
            <listitem><para>void <link linkend="_mylibc__data_8h_1ac4470e5a8fb5cb7816ff2596bd1713d5">ft_free_ls_doubly</link> (<link linkend="_push__swap__data_8h_1a3834963377ca73af56f7e6d6f7b1c7bc">t_list_dls</link> *stack)</para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Typedef Documentation</title>
<anchor xml:id="_mylibc__data_8h_1a755e2b4bf9298aa40dca560c7f27f3d1"/><section>
    <title>t_bresenham</title>
<indexterm><primary>t_bresenham</primary><secondary>mylibc_data.h</secondary></indexterm>
<indexterm><primary>mylibc_data.h</primary><secondary>t_bresenham</secondary></indexterm>
<para><computeroutput>typedef struct <link linkend="_structs__bresenham">s_bresenham</link> <link linkend="_mylibc__data_8h_1a755e2b4bf9298aa40dca560c7f27f3d1">t_bresenham</link></computeroutput></para></section>
<anchor xml:id="_mylibc__data_8h_1a3834963377ca73af56f7e6d6f7b1c7bc"/><section>
    <title>t_list_dls</title>
<indexterm><primary>t_list_dls</primary><secondary>mylibc_data.h</secondary></indexterm>
<indexterm><primary>mylibc_data.h</primary><secondary>t_list_dls</secondary></indexterm>
<para><computeroutput>typedef struct <link linkend="_structs__list__dls">s_list_dls</link> <link linkend="_push__swap__data_8h_1a3834963377ca73af56f7e6d6f7b1c7bc">t_list_dls</link></computeroutput></para></section>
<anchor xml:id="_mylibc__data_8h_1a99ef35a30f94abb8960cfa09342f9ab6"/><section>
    <title>t_list_garbage</title>
<indexterm><primary>t_list_garbage</primary><secondary>mylibc_data.h</secondary></indexterm>
<indexterm><primary>mylibc_data.h</primary><secondary>t_list_garbage</secondary></indexterm>
<para><computeroutput>typedef struct <link linkend="_structs__list__garbage">s_list_garbage</link> <link linkend="_push__swap__data_8h_1a99ef35a30f94abb8960cfa09342f9ab6">t_list_garbage</link></computeroutput></para></section>
<anchor xml:id="_mylibc__data_8h_1a47190768e477b2c92e154ae3bb164af6"/><section>
    <title>t_list_hashmap</title>
<indexterm><primary>t_list_hashmap</primary><secondary>mylibc_data.h</secondary></indexterm>
<indexterm><primary>mylibc_data.h</primary><secondary>t_list_hashmap</secondary></indexterm>
<para><computeroutput>typedef struct <link linkend="_structs__list__hashmap">s_list_hashmap</link> <link linkend="_mylibc__data_8h_1a47190768e477b2c92e154ae3bb164af6">t_list_hashmap</link></computeroutput></para></section>
<anchor xml:id="_mylibc__data_8h_1ab4eb3158d2af72143b6d52db2d9a3eeb"/><section>
    <title>t_list_s</title>
<indexterm><primary>t_list_s</primary><secondary>mylibc_data.h</secondary></indexterm>
<indexterm><primary>mylibc_data.h</primary><secondary>t_list_s</secondary></indexterm>
<para><computeroutput>typedef struct <link linkend="_structs__list__s">s_list_s</link> <link linkend="_mylibc__data_8h_1ab4eb3158d2af72143b6d52db2d9a3eeb">t_list_s</link></computeroutput></para></section>
<anchor xml:id="_mylibc__data_8h_1a93c184abd1f413046ea3ca101ecca48f"/><section>
    <title>t_list_snprintf</title>
<indexterm><primary>t_list_snprintf</primary><secondary>mylibc_data.h</secondary></indexterm>
<indexterm><primary>mylibc_data.h</primary><secondary>t_list_snprintf</secondary></indexterm>
<para><computeroutput>typedef struct <link linkend="_structs__list__snprintf">s_list_snprintf</link> <link linkend="_mylibc__data_8h_1a93c184abd1f413046ea3ca101ecca48f">t_list_snprintf</link></computeroutput></para></section>
</section>
<section>
<title>Function Documentation</title>
<anchor xml:id="_mylibc__data_8h_1a0c07974bd4f70f565a546f656e039718"/><section>
    <title>add_allocation()</title>
<indexterm><primary>add_allocation</primary><secondary>mylibc_data.h</secondary></indexterm>
<indexterm><primary>mylibc_data.h</primary><secondary>add_allocation</secondary></indexterm>
<para><computeroutput>int add_allocation (void * ptr, <link linkend="_push__swap__data_8h_1a99ef35a30f94abb8960cfa09342f9ab6">t_list_garbage</link> * list_garbage)</computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="mylibc__data_8h_a0c07974bd4f70f565a546f656e039718_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_mylibc__data_8h_1a443cc5de0e99a395115e9c9143a06567"/><section>
    <title>array_int_to_d_linked_list()</title>
<indexterm><primary>array_int_to_d_linked_list</primary><secondary>mylibc_data.h</secondary></indexterm>
<indexterm><primary>mylibc_data.h</primary><secondary>array_int_to_d_linked_list</secondary></indexterm>
<para><computeroutput><link linkend="_push__swap__data_8h_1a3834963377ca73af56f7e6d6f7b1c7bc">t_list_dls</link> * array_int_to_d_linked_list (int * argv, int size)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="mylibc__data_8h_a443cc5de0e99a395115e9c9143a06567_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_mylibc__data_8h_1af42a9272b49225ae11a76000d24bbdce"/><section>
    <title>array_to_d_linked_list()</title>
<indexterm><primary>array_to_d_linked_list</primary><secondary>mylibc_data.h</secondary></indexterm>
<indexterm><primary>mylibc_data.h</primary><secondary>array_to_d_linked_list</secondary></indexterm>
<para><computeroutput><link linkend="_push__swap__data_8h_1a3834963377ca73af56f7e6d6f7b1c7bc">t_list_dls</link> * array_to_d_linked_list (char ** argv)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="mylibc__data_8h_af42a9272b49225ae11a76000d24bbdce_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_mylibc__data_8h_1a10c42bdf0b6850e5f908df3d4f6a6561"/><section>
    <title>create_node()</title>
<indexterm><primary>create_node</primary><secondary>mylibc_data.h</secondary></indexterm>
<indexterm><primary>mylibc_data.h</primary><secondary>create_node</secondary></indexterm>
<para><computeroutput><link linkend="_mylibc__data_8h_1a47190768e477b2c92e154ae3bb164af6">t_list_hashmap</link> * create_node (char * key, int value)</computeroutput></para></section>
<anchor xml:id="_mylibc__data_8h_1a3e1cdaa6773961f611986f1a682e3a90"/><section>
    <title>find_min_node()</title>
<indexterm><primary>find_min_node</primary><secondary>mylibc_data.h</secondary></indexterm>
<indexterm><primary>mylibc_data.h</primary><secondary>find_min_node</secondary></indexterm>
<para><computeroutput><link linkend="_push__swap__data_8h_1a3834963377ca73af56f7e6d6f7b1c7bc">t_list_dls</link> * find_min_node (<link linkend="_push__swap__data_8h_1a3834963377ca73af56f7e6d6f7b1c7bc">t_list_dls</link> * stack)</computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="mylibc__data_8h_a3e1cdaa6773961f611986f1a682e3a90_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_mylibc__data_8h_1addccbd0db729b75aff320d1825e9bc50"/><section>
    <title>find_min_node1()</title>
<indexterm><primary>find_min_node1</primary><secondary>mylibc_data.h</secondary></indexterm>
<indexterm><primary>mylibc_data.h</primary><secondary>find_min_node1</secondary></indexterm>
<para><computeroutput>int find_min_node1 (<link linkend="_push__swap__data_8h_1a3834963377ca73af56f7e6d6f7b1c7bc">t_list_dls</link> * stack)</computeroutput></para></section>
<anchor xml:id="_mylibc__data_8h_1a291459160fdb3d7c3cd8d4ed2e8a0084"/><section>
    <title>free_hashtable()</title>
<indexterm><primary>free_hashtable</primary><secondary>mylibc_data.h</secondary></indexterm>
<indexterm><primary>mylibc_data.h</primary><secondary>free_hashtable</secondary></indexterm>
<para><computeroutput>void free_hashtable (<link linkend="_mylibc__data_8h_1a47190768e477b2c92e154ae3bb164af6">t_list_hashmap</link> ** table, int size)</computeroutput></para></section>
<anchor xml:id="_mylibc__data_8h_1aef3d5c31ee22829efe8a302c2e6290f5"/><section>
    <title>ft_free_gb()</title>
<indexterm><primary>ft_free_gb</primary><secondary>mylibc_data.h</secondary></indexterm>
<indexterm><primary>mylibc_data.h</primary><secondary>ft_free_gb</secondary></indexterm>
<para><computeroutput>void ft_free_gb (void * ptr, <link linkend="_push__swap__data_8h_1a99ef35a30f94abb8960cfa09342f9ab6">t_list_garbage</link> * list_garbage)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="mylibc__data_8h_aef3d5c31ee22829efe8a302c2e6290f5_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_mylibc__data_8h_1a943255f04483f31a39a090d0ab7752d1"/><section>
    <title>ft_free_gb_all()</title>
<indexterm><primary>ft_free_gb_all</primary><secondary>mylibc_data.h</secondary></indexterm>
<indexterm><primary>mylibc_data.h</primary><secondary>ft_free_gb_all</secondary></indexterm>
<para><computeroutput>void ft_free_gb_all (<link linkend="_push__swap__data_8h_1a99ef35a30f94abb8960cfa09342f9ab6">t_list_garbage</link> * list_garbage)</computeroutput></para></section>
<anchor xml:id="_mylibc__data_8h_1ac4470e5a8fb5cb7816ff2596bd1713d5"/><section>
    <title>ft_free_ls_doubly()</title>
<indexterm><primary>ft_free_ls_doubly</primary><secondary>mylibc_data.h</secondary></indexterm>
<indexterm><primary>mylibc_data.h</primary><secondary>ft_free_ls_doubly</secondary></indexterm>
<para><computeroutput>void ft_free_ls_doubly (<link linkend="_push__swap__data_8h_1a3834963377ca73af56f7e6d6f7b1c7bc">t_list_dls</link> * stack)</computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="mylibc__data_8h_ac4470e5a8fb5cb7816ff2596bd1713d5_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_mylibc__data_8h_1a4cf3dda016ffda4cc7f225b30a54061b"/><section>
    <title>ft_free_ls_simple()</title>
<indexterm><primary>ft_free_ls_simple</primary><secondary>mylibc_data.h</secondary></indexterm>
<indexterm><primary>mylibc_data.h</primary><secondary>ft_free_ls_simple</secondary></indexterm>
<para><computeroutput>void ft_free_ls_simple (<link linkend="_mylibc__data_8h_1ab4eb3158d2af72143b6d52db2d9a3eeb">t_list_s</link> * stack)</computeroutput></para></section>
<anchor xml:id="_mylibc__data_8h_1a58fd95b2a8b3ef99f250c6db28ee87db"/><section>
    <title>ft_initializator_list_gargabe()</title>
<indexterm><primary>ft_initializator_list_gargabe</primary><secondary>mylibc_data.h</secondary></indexterm>
<indexterm><primary>mylibc_data.h</primary><secondary>ft_initializator_list_gargabe</secondary></indexterm>
<para><computeroutput><link linkend="_push__swap__data_8h_1a99ef35a30f94abb8960cfa09342f9ab6">t_list_garbage</link> * ft_initializator_list_gargabe (void )</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="mylibc__data_8h_a58fd95b2a8b3ef99f250c6db28ee87db_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="mylibc__data_8h_a58fd95b2a8b3ef99f250c6db28ee87db_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_mylibc__data_8h_1aebe986eec4adbb6158cfdb511736bdad"/><section>
    <title>ft_lstadd_back()</title>
<indexterm><primary>ft_lstadd_back</primary><secondary>mylibc_data.h</secondary></indexterm>
<indexterm><primary>mylibc_data.h</primary><secondary>ft_lstadd_back</secondary></indexterm>
<para><computeroutput>void ft_lstadd_back (<link linkend="_push__swap__data_8h_1a3834963377ca73af56f7e6d6f7b1c7bc">t_list_dls</link> ** stack, <link linkend="_push__swap__data_8h_1a3834963377ca73af56f7e6d6f7b1c7bc">t_list_dls</link> * new_node)</computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="mylibc__data_8h_aebe986eec4adbb6158cfdb511736bdad_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_mylibc__data_8h_1a9a626c611a2a0a2d6361dd3a160cb3b5"/><section>
    <title>ft_lstadd_back_s()</title>
<indexterm><primary>ft_lstadd_back_s</primary><secondary>mylibc_data.h</secondary></indexterm>
<indexterm><primary>mylibc_data.h</primary><secondary>ft_lstadd_back_s</secondary></indexterm>
<para><computeroutput>void ft_lstadd_back_s (<link linkend="_mylibc__data_8h_1ab4eb3158d2af72143b6d52db2d9a3eeb">t_list_s</link> ** lst, <link linkend="_mylibc__data_8h_1ab4eb3158d2af72143b6d52db2d9a3eeb">t_list_s</link> * new)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="mylibc__data_8h_a9a626c611a2a0a2d6361dd3a160cb3b5_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="mylibc__data_8h_a9a626c611a2a0a2d6361dd3a160cb3b5_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_mylibc__data_8h_1a3c2e74bb51ab5690ce73ddf9b4ef3feb"/><section>
    <title>ft_lstadd_front_s()</title>
<indexterm><primary>ft_lstadd_front_s</primary><secondary>mylibc_data.h</secondary></indexterm>
<indexterm><primary>mylibc_data.h</primary><secondary>ft_lstadd_front_s</secondary></indexterm>
<para><computeroutput>void ft_lstadd_front_s (<link linkend="_mylibc__data_8h_1ab4eb3158d2af72143b6d52db2d9a3eeb">t_list_s</link> ** lst, <link linkend="_mylibc__data_8h_1ab4eb3158d2af72143b6d52db2d9a3eeb">t_list_s</link> * new)</computeroutput></para></section>
<anchor xml:id="_mylibc__data_8h_1aeace56ca809860377717a27c41500cf3"/><section>
    <title>ft_lstclear_s()</title>
<indexterm><primary>ft_lstclear_s</primary><secondary>mylibc_data.h</secondary></indexterm>
<indexterm><primary>mylibc_data.h</primary><secondary>ft_lstclear_s</secondary></indexterm>
<para><computeroutput>void ft_lstclear_s (<link linkend="_mylibc__data_8h_1ab4eb3158d2af72143b6d52db2d9a3eeb">t_list_s</link> ** lst, void(*)(void *) del)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="mylibc__data_8h_aeace56ca809860377717a27c41500cf3_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="mylibc__data_8h_aeace56ca809860377717a27c41500cf3_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_mylibc__data_8h_1a33aff2e2125f56fee46c82e3c3b7a9aa"/><section>
    <title>ft_lstdelone_s()</title>
<indexterm><primary>ft_lstdelone_s</primary><secondary>mylibc_data.h</secondary></indexterm>
<indexterm><primary>mylibc_data.h</primary><secondary>ft_lstdelone_s</secondary></indexterm>
<para><computeroutput>void ft_lstdelone_s (<link linkend="_mylibc__data_8h_1ab4eb3158d2af72143b6d52db2d9a3eeb">t_list_s</link> * lst, void(*)(void *) del)</computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="mylibc__data_8h_a33aff2e2125f56fee46c82e3c3b7a9aa_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_mylibc__data_8h_1a2db243f45e4ab42d4a7a8fd3128e4b5d"/><section>
    <title>ft_lstiter_s()</title>
<indexterm><primary>ft_lstiter_s</primary><secondary>mylibc_data.h</secondary></indexterm>
<indexterm><primary>mylibc_data.h</primary><secondary>ft_lstiter_s</secondary></indexterm>
<para><computeroutput>void ft_lstiter_s (<link linkend="_mylibc__data_8h_1ab4eb3158d2af72143b6d52db2d9a3eeb">t_list_s</link> * lst, void(*)(void *) f)</computeroutput></para></section>
<anchor xml:id="_mylibc__data_8h_1a5884aaca7496ffc8e023a25fd4a82e04"/><section>
    <title>ft_lstlast_s()</title>
<indexterm><primary>ft_lstlast_s</primary><secondary>mylibc_data.h</secondary></indexterm>
<indexterm><primary>mylibc_data.h</primary><secondary>ft_lstlast_s</secondary></indexterm>
<para><computeroutput><link linkend="_mylibc__data_8h_1ab4eb3158d2af72143b6d52db2d9a3eeb">t_list_s</link> * ft_lstlast_s (<link linkend="_mylibc__data_8h_1ab4eb3158d2af72143b6d52db2d9a3eeb">t_list_s</link> * lst)</computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="mylibc__data_8h_a5884aaca7496ffc8e023a25fd4a82e04_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_mylibc__data_8h_1a940520a5d11ffc84c845901f20834c74"/><section>
    <title>ft_lstmap_s()</title>
<indexterm><primary>ft_lstmap_s</primary><secondary>mylibc_data.h</secondary></indexterm>
<indexterm><primary>mylibc_data.h</primary><secondary>ft_lstmap_s</secondary></indexterm>
<para><computeroutput><link linkend="_mylibc__data_8h_1ab4eb3158d2af72143b6d52db2d9a3eeb">t_list_s</link> * ft_lstmap_s (<link linkend="_mylibc__data_8h_1ab4eb3158d2af72143b6d52db2d9a3eeb">t_list_s</link> * lst, void *(*)(void *) f, void(*)(void *) del)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="mylibc__data_8h_a940520a5d11ffc84c845901f20834c74_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_mylibc__data_8h_1a10717fc853b7947e8aac1a498b4b48e8"/><section>
    <title>ft_lstnew()</title>
<indexterm><primary>ft_lstnew</primary><secondary>mylibc_data.h</secondary></indexterm>
<indexterm><primary>mylibc_data.h</primary><secondary>ft_lstnew</secondary></indexterm>
<para><computeroutput><link linkend="_push__swap__data_8h_1a3834963377ca73af56f7e6d6f7b1c7bc">t_list_dls</link> * ft_lstnew (int value, int index)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="mylibc__data_8h_a10717fc853b7947e8aac1a498b4b48e8_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="mylibc__data_8h_a10717fc853b7947e8aac1a498b4b48e8_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_mylibc__data_8h_1a1b4b88913e5e042bb83a24ac2f4087fc"/><section>
    <title>ft_lstnew_s()</title>
<indexterm><primary>ft_lstnew_s</primary><secondary>mylibc_data.h</secondary></indexterm>
<indexterm><primary>mylibc_data.h</primary><secondary>ft_lstnew_s</secondary></indexterm>
<para><computeroutput><link linkend="_mylibc__data_8h_1ab4eb3158d2af72143b6d52db2d9a3eeb">t_list_s</link> * ft_lstnew_s (void * content)</computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="mylibc__data_8h_a1b4b88913e5e042bb83a24ac2f4087fc_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_mylibc__data_8h_1a05000302246b576df33f1f89ae3d4f18"/><section>
    <title>ft_lstsize()</title>
<indexterm><primary>ft_lstsize</primary><secondary>mylibc_data.h</secondary></indexterm>
<indexterm><primary>mylibc_data.h</primary><secondary>ft_lstsize</secondary></indexterm>
<para><computeroutput>int ft_lstsize (<link linkend="_push__swap__data_8h_1a3834963377ca73af56f7e6d6f7b1c7bc">t_list_dls</link> * lst)</computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="mylibc__data_8h_a05000302246b576df33f1f89ae3d4f18_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_mylibc__data_8h_1af4d50c79841850b728676dfbeebc30f2"/><section>
    <title>ft_lstsize_s()</title>
<indexterm><primary>ft_lstsize_s</primary><secondary>mylibc_data.h</secondary></indexterm>
<indexterm><primary>mylibc_data.h</primary><secondary>ft_lstsize_s</secondary></indexterm>
<para><computeroutput>int ft_lstsize_s (<link linkend="_mylibc__data_8h_1ab4eb3158d2af72143b6d52db2d9a3eeb">t_list_s</link> * lst)</computeroutput></para></section>
<anchor xml:id="_mylibc__data_8h_1a00872120017ab308f47890f195c6df68"/><section>
    <title>ft_malloc_gb()</title>
<indexterm><primary>ft_malloc_gb</primary><secondary>mylibc_data.h</secondary></indexterm>
<indexterm><primary>mylibc_data.h</primary><secondary>ft_malloc_gb</secondary></indexterm>
<para><computeroutput>void * ft_malloc_gb (size_t size, <link linkend="_push__swap__data_8h_1a99ef35a30f94abb8960cfa09342f9ab6">t_list_garbage</link> * list_garbage)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="mylibc__data_8h_a00872120017ab308f47890f195c6df68_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_mylibc__data_8h_1acbb080f965dc3107b71cef2afcb6ecff"/><section>
    <title>ft_print_ls_doubly()</title>
<indexterm><primary>ft_print_ls_doubly</primary><secondary>mylibc_data.h</secondary></indexterm>
<indexterm><primary>mylibc_data.h</primary><secondary>ft_print_ls_doubly</secondary></indexterm>
<para><computeroutput>void ft_print_ls_doubly (<link linkend="_push__swap__data_8h_1a3834963377ca73af56f7e6d6f7b1c7bc">t_list_dls</link> * stack)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="mylibc__data_8h_acbb080f965dc3107b71cef2afcb6ecff_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_mylibc__data_8h_1a7d34494a63b8833fcba0825eac851232"/><section>
    <title>ft_print_ls_doubly_fd_int()</title>
<indexterm><primary>ft_print_ls_doubly_fd_int</primary><secondary>mylibc_data.h</secondary></indexterm>
<indexterm><primary>mylibc_data.h</primary><secondary>ft_print_ls_doubly_fd_int</secondary></indexterm>
<para><computeroutput>int ft_print_ls_doubly_fd_int (long Fd, <link linkend="_push__swap__data_8h_1a3834963377ca73af56f7e6d6f7b1c7bc">t_list_dls</link> * stack)</computeroutput></para>Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="mylibc__data_8h_a7d34494a63b8833fcba0825eac851232_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
<anchor xml:id="_mylibc__data_8h_1a9a5a38ef3b1f50be50a9b7d86591274b"/><section>
    <title>ft_swap_pointers()</title>
<indexterm><primary>ft_swap_pointers</primary><secondary>mylibc_data.h</secondary></indexterm>
<indexterm><primary>mylibc_data.h</primary><secondary>ft_swap_pointers</secondary></indexterm>
<para><computeroutput>void ft_swap_pointers (<link linkend="_push__swap__data_8h_1a3834963377ca73af56f7e6d6f7b1c7bc">t_list_dls</link> ** a, <link linkend="_push__swap__data_8h_1a3834963377ca73af56f7e6d6f7b1c7bc">t_list_dls</link> ** b)</computeroutput></para></section>
<anchor xml:id="_mylibc__data_8h_1aafe95c17b204c6bca2e6c00c7aac86d2"/><section>
    <title>get()</title>
<indexterm><primary>get</primary><secondary>mylibc_data.h</secondary></indexterm>
<indexterm><primary>mylibc_data.h</primary><secondary>get</secondary></indexterm>
<para><computeroutput>int get (<link linkend="_mylibc__data_8h_1a47190768e477b2c92e154ae3bb164af6">t_list_hashmap</link> ** table, int size, const char * key)</computeroutput></para></section>
<anchor xml:id="_mylibc__data_8h_1a38bdb928f610c3d3b1f6688b38e25e48"/><section>
    <title>hash()</title>
<indexterm><primary>hash</primary><secondary>mylibc_data.h</secondary></indexterm>
<indexterm><primary>mylibc_data.h</primary><secondary>hash</secondary></indexterm>
<para><computeroutput>size_t hash (char * key, int size)</computeroutput></para></section>
<anchor xml:id="_mylibc__data_8h_1a470ef49ee977b142f6fcfc281753d60c"/><section>
    <title>insert()</title>
<indexterm><primary>insert</primary><secondary>mylibc_data.h</secondary></indexterm>
<indexterm><primary>mylibc_data.h</primary><secondary>insert</secondary></indexterm>
<para><computeroutput>void insert (<link linkend="_mylibc__data_8h_1a47190768e477b2c92e154ae3bb164af6">t_list_hashmap</link> ** table, int size, const char * key, int value)</computeroutput></para></section>
<anchor xml:id="_mylibc__data_8h_1abdadd82f271dbbcd1574fcaf55bb66b1"/><section>
    <title>is_allocated()</title>
<indexterm><primary>is_allocated</primary><secondary>mylibc_data.h</secondary></indexterm>
<indexterm><primary>mylibc_data.h</primary><secondary>is_allocated</secondary></indexterm>
<para><computeroutput>int is_allocated (void * ptr, <link linkend="_push__swap__data_8h_1a99ef35a30f94abb8960cfa09342f9ab6">t_list_garbage</link> * list_garbage)</computeroutput></para></section>
<anchor xml:id="_mylibc__data_8h_1a8c2facdc4545aa776f0aeac23fcdfcba"/><section>
    <title>remove_allocation()</title>
<indexterm><primary>remove_allocation</primary><secondary>mylibc_data.h</secondary></indexterm>
<indexterm><primary>mylibc_data.h</primary><secondary>remove_allocation</secondary></indexterm>
<para><computeroutput>void remove_allocation (void * ptr, <link linkend="_push__swap__data_8h_1a99ef35a30f94abb8960cfa09342f9ab6">t_list_garbage</link> * list_garbage)</computeroutput></para>Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="mylibc__data_8h_a8c2facdc4545aa776f0aeac23fcdfcba_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
</section>
</section>
</section>
